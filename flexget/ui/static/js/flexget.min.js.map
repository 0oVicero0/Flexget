{"version":3,"sources":["app.js","utils.js","controllers/flexgetCtrl.js","controllers/login.js","directives/pageHeader.js","services/modal.js"],"names":["bootstrapApplication","angular","element","document","ready","bootstrap","registerFlexModule","module","requires","push","name","register_menu","href","caption","icon","order","app","menu","register_route","url","controller","template","routes","config","$stateProvider","$urlRouterProvider","$mdThemingProvider","$mdIconProvider","fontSet","theme","primaryPalette","otherwise","currentRoute","j","length","state","templateUrl","String","prototype","startsWith","prefix","this","indexOf","$scope","$http","$mdSidenav","$state","$mdMedia","$mdDialog","menuItems","toggleMenu","isLockedOpen","menuMini","toggle","closeNav","$event","close","go","reload","reloadController","title","showCircular","content","buttons","ok","hide","done","text","get","success","data","status","headers","error","show","parent","body","doShutdown","window","stop","shutdownController","shutdown","confirm","cancel","then","authService","doLogin","LoginModalController","credentials","username","password","login","post","loginConfirmed","message","closeLogin","$on","directive","restrict","replace","service","$modal","defaultOptions","backdrop","keyboard","modalFade","size","headerText","bodyText","okText","okType","closeText","closeType","showModal","options","tempOptions","extend","$modalInstance","modalOptions","result","dismiss","open"],"mappings":"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","file":"flexget.min.js","sourcesContent":["'use strict';\r\n\r\nvar app = angular.module('flexgetApp', ['ui.router', 'ngMaterial']);\r\n\r\nfunction bootstrapApplication() {\r\n  angular.element(document).ready(function() {\r\n    angular.bootstrap(document, ['flexgetApp']);\r\n  });\r\n}\r\n\r\napp.config(function($stateProvider, $urlRouterProvider, $mdThemingProvider, $mdIconProvider) {\r\n  $mdIconProvider.fontSet('fa', 'fa');\r\n  $mdThemingProvider.theme('default')\r\n    .primaryPalette('orange');\r\n\r\n  $urlRouterProvider.otherwise('/home');\r\n\r\n  var currentRoute;\r\n  var j = 0;\r\n\r\n  for ( ; j < app.routes.length; j++ ) {\r\n    currentRoute = app.routes[j];\r\n    $stateProvider.state(currentRoute.name, {\r\n      url: currentRoute.url,\r\n      templateUrl: currentRoute.template,\r\n      controller: currentRoute.controller\r\n    });\r\n  }\r\n});\r\n\r\nbootstrapApplication();","'use strict';\r\n\r\nString.prototype.startsWith = function(prefix) {\r\n  return this.indexOf(prefix) === 0;\r\n};\r\n\r\nfunction registerFlexModule(module) {\r\n  angular.module('flexgetApp').requires.push(module.name);\r\n}\r\n\r\napp.menu = [];\r\napp.routes = [];\r\n\r\nfunction register_menu(href, caption, icon, order) {\r\n  href = '/ui/#' + href;\r\n  app.menu.push({href: href, caption: caption, icon: icon, order: order})\r\n}\r\n\r\nfunction register_route(name, url, controller, template) {\r\n  app.routes.push({\r\n    name: name,\r\n    url: url,\r\n    controller: controller,\r\n    template: template\r\n  });\r\n}","'use strict';\r\n\r\napp.controller('flexgetCtrl', function($scope, $http, $mdSidenav, $state, $mdMedia, $mdDialog) {\r\n\r\n  $scope.menuItems = app.menu;\r\n  $scope.toggleMenu = function() {\r\n    if ($mdSidenav('left').isLockedOpen()) {\r\n      $scope.menuMini = !$scope.menuMini;\r\n    } else {\r\n      $scope.menuMini = false;\r\n      $mdSidenav('left').toggle();\r\n    }\r\n  };\r\n\r\n  $scope.closeNav = function($event) {\r\n    if (!$mdMedia('gt-lg')) {\r\n      $mdSidenav('left').close();\r\n    }\r\n  };\r\n\r\n  /* Shortcut to go a page (route) */\r\n  $scope.go = function(state) {\r\n    $state.go(state);\r\n  };\r\n\r\n  /* Reload Flexget config file */\r\n  $scope.reload = function() {\r\n    var reloadController = function($scope, $mdDialog) {\r\n      $scope.title = 'Reload Config';\r\n      $scope.showCircular = true;\r\n      $scope.content = null;\r\n      $scope.buttons  = [];\r\n      $scope.ok = null;\r\n\r\n      $scope.hide = function () {\r\n        $mdDialog.hide();\r\n      };\r\n\r\n      var done = function(text) {\r\n        $scope.showCircular = false;\r\n        $scope.content = text;\r\n        $scope.ok = 'Close';\r\n      };\r\n\r\n      $http.get('/api/server/reload/').\r\n        success(function (data, status, headers, config) {\r\n          done('Reload Success');\r\n        }).\r\n        error(function (data, status, headers, config) {\r\n          done('Reload failed: ' + data.error);\r\n        });\r\n    };\r\n\r\n    $mdDialog.show({\r\n      templateUrl: 'static/partials/dialog_circular.html',\r\n      parent: angular.element(document.body),\r\n      controller: reloadController\r\n    });\r\n\r\n  };\r\n\r\n  var doShutdown = function() {\r\n    window.stop(); // Kill any http connection\r\n\r\n    var shutdownController = function($scope, $mdDialog) {\r\n      $scope.title = 'Shutting Down';\r\n      $scope.showCircular = true;\r\n      $scope.content = null;\r\n      $scope.buttons  = [];\r\n      $scope.ok = null;\r\n\r\n      $scope.hide = function () {\r\n        $mdDialog.hide();\r\n      };\r\n\r\n      var done = function(text) {\r\n        $scope.title = 'Shutdown';\r\n        $scope.showCircular = false;\r\n        $scope.content = text;\r\n        $scope.ok = 'Close';\r\n      };\r\n\r\n      $http.get('/api/server/shutdown/').\r\n        success(function (data, status, headers, config) {\r\n          done('Flexget has been shutdown');\r\n        }).\r\n        error(function (data, status, headers, config) {\r\n          done('Flexget failed to shutdown failed: ' + data.error);\r\n        });\r\n    };\r\n    $mdDialog.show({\r\n      templateUrl: 'static/partials/dialog_circular.html',\r\n      parent: angular.element(document.body),\r\n      controller: shutdownController\r\n    });\r\n\r\n  };\r\n\r\n  $scope.shutdown = function() {\r\n    $mdDialog.show(\r\n      $mdDialog.confirm()\r\n        .parent(angular.element(document.body))\r\n        .title('Shutdown')\r\n        .content('Are you sure you want to shutdown Flexget?')\r\n        .ok('Shutdown')\r\n        .cancel('Cancel')\r\n    ).then(function() {\r\n        doShutdown();\r\n      });\r\n\r\n  };\r\n\r\n});\r\n","'use strict';\r\n\r\napp.requires.push('http-auth-interceptor');\r\n\r\napp.controller('LoginController', function ($scope, $http, $mdDialog, authService) {\r\n  $scope.error = '';\r\n\r\n  var doLogin = function() {\r\n    var LoginModalController = function($scope) {\r\n      $scope.error = '';\r\n      $scope.credentials = {\r\n        username: '',\r\n        password: ''\r\n      };\r\n      $scope.login = function () {\r\n        $http.post('/api/login/', $scope.credentials).success(function() {\r\n          authService.loginConfirmed();\r\n        }).error(function(data) {\r\n          $scope.credentials.password = '';\r\n          if ('message' in data) {\r\n            $scope.error = data.message;\r\n          } else {\r\n            $scope.error = 'Error during authentication';\r\n          }\r\n        });\r\n      }\r\n    };\r\n    $mdDialog.show({\r\n      templateUrl: 'static/partials/login.html',\r\n      parent: angular.element(document.body),\r\n      controller: LoginModalController\r\n    });\r\n\r\n  };\r\n\r\n  var closeLogin = function() {\r\n    $mdDialog.hide();\r\n  };\r\n\r\n  $scope.$on('event:auth-loginRequired', doLogin);\r\n  $scope.$on('event:auth-loginConfirmed', closeLogin)\r\n});\r\n","'use strict';\r\n\r\napp.directive('pageHeader', function() {\r\n  return {\r\n      restrict: 'AE',\r\n      replace: 'true',\r\n      template: '<section class=\"content-header\"><h1>{{title }}<small>{{ description }}</small></h1></section>'\r\n  };\r\n});\r\n\r\n","'use strict';\r\n\r\nvar app = angular.module('flexgetApp');\r\n\r\napp.service('modalService', ['$modal',\r\n  function ($modal) {\r\n\r\n    var defaultOptions = {\r\n      backdrop: true,\r\n      keyboard: true,\r\n      modalFade: true,\r\n      size: 'md',\r\n      templateUrl: '/ui/static/partials/modal.html',\r\n      headerText: 'Proceed?',\r\n      bodyText: 'Perform this action?',\r\n      okText: 'Ok',\r\n      okType: 'primary',\r\n      closeText: 'Cancel',\r\n      closeType: 'default'\r\n    };\r\n\r\n    this.showModal = function (options) {\r\n      //Create temp objects to work with since we're in a singleton service\r\n      var tempOptions = {};\r\n      angular.extend(tempOptions, defaultOptions, options);\r\n\r\n      if (!tempOptions.controller) {\r\n        tempOptions.controller = function ($scope, $modalInstance) {\r\n          $scope.modalOptions = tempOptions;\r\n\r\n          $scope.ok = function(result) {\r\n            $modalInstance.close(result);\r\n          };\r\n          $scope.close = function(result) {\r\n            $modalInstance.dismiss('cancel');\r\n          };\r\n        }\r\n      }\r\n      return $modal.open(tempOptions).result;\r\n    };\r\n\r\n  }]);"],"sourceRoot":"/source/"}